openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://car-parking.test'
paths:
  /api/v1/auth/register:
    post:
      summary: ''
      operationId: postApiV1AuthRegister
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qjuhazvnbo
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: kole.wehner@example.org
                password:
                  type: string
                  description: ''
                  example: fugiat
                password_confirmation:
                  type: string
                  description: ''
                  example: ad
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/v1/auth/login:
    post:
      summary: ''
      operationId: postApiV1AuthLogin
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: haag.sabryna@example.com
                password:
                  type: string
                  description: ''
                  example: ipsum
              required:
                - email
                - password
      security: []
  /api/v1/vehicles:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plate_number:
                  type: string
                  description: ''
                  example: labore
              required:
                - plate_number
      security: []
  '/api/v1/vehicles/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plate_number:
                  type: string
                  description: ''
                  example: itaque
              required:
                - plate_number
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the vehicle.'
        example: 15
        required: true
        schema:
          type: integer
  /api/v1/zones:
    get:
      summary: ''
      operationId: getApiV1Zones
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      security: []
  '/api/v1/zones/{zone_id}':
    get:
      summary: ''
      operationId: getApiV1ZonesZone_id
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      security: []
    parameters:
      -
        in: path
        name: zone_id
        description: 'The ID of the zone.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/parkings:
    get:
      summary: ''
      operationId: getApiV1Parkings
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      security: []
  '/api/v1/parkings/{parking_id}':
    get:
      summary: ''
      operationId: getApiV1ParkingsParking_id
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      security: []
    parameters:
      -
        in: path
        name: parking_id
        description: 'The ID of the parking.'
        example: 13
        required: true
        schema:
          type: integer
  /api/v1/parkings/start:
    post:
      summary: ''
      operationId: postApiV1ParkingsStart
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                zone_id:
                  type: string
                  description: ''
                  example: adipisci
                vehicle_id:
                  type: string
                  description: ''
                  example: amet
              required:
                - zone_id
                - vehicle_id
      security: []
  '/api/v1/parkings/stop/{parking_id}':
    put:
      summary: ''
      operationId: putApiV1ParkingsStopParking_id
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Auth
      security: []
    parameters:
      -
        in: path
        name: parking_id
        description: 'The ID of the parking.'
        example: 5
        required: true
        schema:
          type: integer
  /api/v1/auth/profile:
    get:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/auth/profile/{user}':
    put:
      summary: ''
      operationId: putApiV1AuthProfileUser
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: srvidkuxghqjnxui
                email:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: schamberger.vicente@example.net
              required:
                - name
                - email
      security: []
    parameters:
      -
        in: path
        name: user
        description: ''
        example: porro
        required: true
        schema:
          type: string
  /api/v1/auth/password:
    put:
      summary: 'Handle the incoming request.'
      operationId: handleTheIncomingRequest
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: ''
                  example: eius
                password:
                  type: string
                  description: ''
                  example: culpa
                password_confirmation:
                  type: string
                  description: ''
                  example: dolorem
              required:
                - current_password
                - password
                - password_confirmation
      security: []
tags:
  -
    name: Auth
    description: ''
  -
    name: Endpoints
    description: ''
